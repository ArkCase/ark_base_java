#!/bin/bash

set -euo pipefail
. /.functions

usage()
{
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} [ -? | -h | --help ] [ version ]"
	echo -e ""
	echo -e "\tIf the version is not given as a parameter, an attempt"
	echo -e "\twill be made to read it from the environment variable"
	echo -e "\tALT_JAVA if it's defined and non-empty."
	echo -e ""
	exit 1
}

# If no parameter is given, we try to select the java
# version from the ALT_JAVA ENVVAR
[ ${#} -eq 0 ] && [ -v ALT_JAVA ] && [ -n "${ALT_JAVA}" ] && set -- "${ALT_JAVA}"

. /etc/os-release || fail "Failed to source the O/S identification file"

CANDIDATES=( "${ID:-linux}" ${ID_LIKE} )

for CANDIDATE in "${CANDIDATES[@]}" ; do
	EXE="$(type -P "set-java.${CANDIDATE}" 2>/dev/null)" && exec "${EXE}" "${@}"
done
fail "Couldn't find a set-java variant for any of these candidates: [ ${CANDIDATES[@]} ]"
